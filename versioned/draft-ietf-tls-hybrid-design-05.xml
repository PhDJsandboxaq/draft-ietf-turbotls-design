<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.6) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-tls-hybrid-design-05" category="info" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.14.1 -->
  <front>
    <title abbrev="ietf-tls-hybrid-design">Hybrid key exchange in TLS 1.3</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-tls-hybrid-design-05"/>
    <author initials="D." surname="Stebila" fullname="Douglas Stebila">
      <organization>University of Waterloo</organization>
      <address>
        <email>dstebila@uwaterloo.ca</email>
      </address>
    </author>
    <author initials="S." surname="Fluhrer" fullname="Scott Fluhrer">
      <organization>Cisco Systems</organization>
      <address>
        <email>sfluhrer@cisco.com</email>
      </address>
    </author>
    <author initials="S." surname="Gueron" fullname="Shay Gueron">
      <organization abbrev="U. Haifa, Amazon Web Services">University of Haifa and Amazon Web Services</organization>
      <address>
        <email>shay.gueron@gmail.com</email>
      </address>
    </author>
    <date year="2022" month="August" day="28"/>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <t>Hybrid key exchange refers to using multiple key exchange algorithms simultaneously and combining the result with the goal of providing security even if all but one of the component algorithms is broken.  It is motivated by transition to post-quantum cryptography.  This document provides a construction for hybrid key exchange in the Transport Layer Security (TLS) protocol version 1.3.</t>
      <t>Discussion of this work is encouraged to happen on the TLS IETF mailing list tls@ietf.org or on the GitHub repository which contains the draft: https://github.com/dstebila/draft-ietf-tls-hybrid-design.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>This document gives a construction for hybrid key exchange in TLS 1.3.  The overall design approach is a simple, "concatenation"-based approach: each hybrid key exchange combination should be viewed as a single new key exchange method, negotiated and transmitted using the existing TLS 1.3 mechanisms.</t>
      <t>This document does not propose specific post-quantum mechanisms; see <xref target="scope"/> for more on the scope of this document.</t>
      <section anchor="revision-history">
        <name>Revision history</name>
        <ul empty="true">
          <li>
            <t><strong>RFC Editor's Note:</strong> Please remove this section prior to publication of a final version of this document.</t>
          </li>
        </ul>
        <t>Earlier versions of this document categorized various design decisions one could make when implementing hybrid key exchange in TLS 1.3.</t>
        <ul spacing="normal">
          <li>
            <t>Since draft-ietf-tls-hybrid-design-04:
            </t>
            <ul spacing="normal">
              <li>Define four hybrid key exchange methods</li>
              <li>Updates to reflect NIST's selection of Kyber</li>
              <li>Clarifications and rewordings based on working group comments</li>
            </ul>
          </li>
          <li>
            <t>Since draft-ietf-tls-hybrid-design-03:
            </t>
            <ul spacing="normal">
              <li>Some wording changes</li>
              <li>Remove design considerations appendix</li>
            </ul>
          </li>
          <li>
            <t>draft-ietf-tls-hybrid-design-03:
            </t>
            <ul spacing="normal">
              <li>Remove specific code point examples and requested codepoint range for hybrid private use</li>
              <li>Change "Open questions" to "Discussion"</li>
              <li>Some wording changes</li>
            </ul>
          </li>
          <li>
            <t>draft-ietf-tls-hybrid-design-02:
            </t>
            <ul spacing="normal">
              <li>Bump to version -02 to avoid expiry</li>
            </ul>
          </li>
          <li>
            <t>draft-ietf-tls-hybrid-design-01:
            </t>
            <ul spacing="normal">
              <li>Forbid variable-length secret keys</li>
              <li>Use fixed-length KEM public keys/ciphertexts</li>
            </ul>
          </li>
          <li>
            <t>draft-ietf-tls-hybrid-design-00:
            </t>
            <ul spacing="normal">
              <li>Allow key_exchange values from the same algorithm to be reused across multiple KeyShareEntry records in the same ClientHello.</li>
            </ul>
          </li>
          <li>
            <t>draft-stebila-tls-hybrid-design-03:
            </t>
            <ul spacing="normal">
              <li>Add requirement for KEMs to provide protection against key reuse.</li>
              <li>Clarify FIPS-compliance of shared secret concatenation method.</li>
            </ul>
          </li>
          <li>
            <t>draft-stebila-tls-hybrid-design-02:
            </t>
            <ul spacing="normal">
              <li>Design considerations from draft-stebila-tls-hybrid-design-00 and draft-stebila-tls-hybrid-design-01 are moved to the appendix.</li>
              <li>A single construction is given in the main body.</li>
            </ul>
          </li>
          <li>
            <t>draft-stebila-tls-hybrid-design-01:
            </t>
            <ul spacing="normal">
              <li>Add (Comb-KDF-1) and (Comb-KDF-2) options.</li>
              <li>Add two candidate instantiations.</li>
            </ul>
          </li>
          <li>draft-stebila-tls-hybrid-design-00: Initial version.</li>
        </ul>
      </section>
      <section anchor="terminology">
        <name>Terminology</name>
        <t>For the purposes of this document, it is helpful to be able to divide cryptographic algorithms into two classes:</t>
        <ul spacing="normal">
          <li>"Traditional" algorithms: Algorithms which are widely deployed today, but which may be deprecated in the future.  In the context of TLS 1.3, examples of traditional key exchange algorithms include elliptic curve Diffie--Hellman using secp256r1 or x25519, or finite-field Diffie--Hellman.</li>
          <li>"Next-generation" (or "next-gen") algorithms: Algorithms which are not yet widely deployed, but which may eventually be widely deployed.  An additional facet of these algorithms may be that we have less confidence in their security due to them being relatively new or less studied.  This includes "post-quantum" algorithms.</li>
        </ul>
        <t>"Hybrid" key exchange, in this context, means the use of two (or more) key exchange algorithms based on different cryptographic assumptions, e.g., one traditional algorithm and one next-gen algorithm, with the purpose of the final session key being secure as long as at least one of the component key exchange algorithms remains unbroken.
When one of the algorithms is traditional and one of them is postquantum, this is a Post-Quantum Traditional Hybrid Scheme <xref target="I-D.driscoll-pqt-hybrid-terminology"/>; while this is the initial use case for this draft, we do not limit this draft to that case.
We use the term "component" algorithms to refer to the algorithms combined in a hybrid key exchange.</t>
        <t>We note that some authors prefer the phrase "composite" to refer to the use of multiple algorithms, to distinguish from "hybrid public key encryption" in which a key encapsulation mechanism and data encapsulation mechanism are combined to create public key encryption.</t>
        <t>It is intended that the composite algorithms within a hybrid key exchange are to be performed, that is, negotiated and transmitted, within the TLS 1.3 handshake.  Any out-of-band method of exchanging keying material is considered out-of-scope.</t>
        <t>The primary motivation of this document is preparing for post-quantum algorithms.  However, it is possible that public key cryptography based on alternative mathematical constructions will be desired to mitigate risks independent of the advent of a quantum computer, for example because of a cryptanalytic breakthrough.  As such we opt for the more generic term "next-generation" algorithms rather than exclusively "post-quantum" algorithms.</t>
        <t>Note that TLS 1.3 uses the phrase "groups" to refer to key exchange algorithms -- for example, the <tt>supported_groups</tt> extension -- since all key exchange algorithms in TLS 1.3 are Diffie--Hellman-based.  As a result, some parts of this document will refer to data structures or messages with the term "group" in them despite using a key exchange algorithm that is not Diffie--Hellman-based nor a group.</t>
      </section>
      <section anchor="motivation">
        <name>Motivation for use of hybrid key exchange</name>
        <t>A hybrid key exchange algorithm allows early adopters eager for post-quantum security to have the potential of post-quantum security (possibly from a less-well-studied algorithm) while still retaining at least the security currently offered by traditional algorithms.  They may even need to retain traditional algorithms due to regulatory constraints, for example FIPS compliance.</t>
        <t>Ideally, one would not use hybrid key exchange: one would have confidence in a single algorithm and parameterization that will stand the test of time.  However, this may not be the case in the face of quantum computers and cryptanalytic advances more generally.</t>
        <t>Many (though not all) post-quantum algorithms currently under consideration are relatively new; they have not been subject to the same depth of study as RSA and finite-field or elliptic curve Diffie--Hellman, and thus the security community does not necessarily have as much confidence in their fundamental security, or the concrete security level of specific parameterizations.</t>
        <t>Moreover, it is possible that after next-generation algorithms are defined, and for a period of time thereafter, conservative users may not have full confidence in some algorithms.</t>
        <t>Some users may want to accelerate adoption of post-quantum cryptography due to the threat of retroactive decryption: if a cryptographic assumption is broken due to the advent of a quantum computer or some other cryptanalytic breakthrough, confidentiality of information can be broken retroactively by any adversary who has passively recorded handshakes and encrypted communications.  Hybrid key exchange enables potential security against retroactive decryption while not fully abandoning traditional cryptosystems.</t>
        <t>As such, there may be users for whom hybrid key exchange is an appropriate step prior to an eventual transition to next-generation algorithms. Users should consider the confidence they have in each hybrid component to assess that the hybrid system meets the desired motivation.</t>
      </section>
      <section anchor="scope">
        <name>Scope</name>
        <t>This document focuses on hybrid ephemeral key exchange in TLS 1.3 <xref target="TLS13"/>.  It intentionally does not address:</t>
        <ul spacing="normal">
          <li>Selecting which next-generation algorithms to use in TLS 1.3, or algorithm identifiers or encoding mechanisms for next-generation algorithms.  This selection will be based on the recommendations by the Crypto Forum Research Group (CFRG), which is currently waiting for the results of the NIST Post-Quantum Cryptography Standardization Project <xref target="NIST"/>.</li>
          <li>Authentication using next-generation algorithms.  While quantum computers could retroactively decrypt previous sessions, session authentication cannot be retroactively broken.</li>
        </ul>
      </section>
      <section anchor="goals">
        <name>Goals</name>
        <t>The primary goal of a hybrid key exchange mechanism is to facilitate the establishment of a shared secret which remains secure as long as as one of the component key exchange mechanisms remains unbroken.</t>
        <t>In addition to the primary cryptographic goal, there may be several additional goals in the context of TLS 1.3:</t>
        <ul spacing="normal">
          <li>
            <t><strong>Backwards compatibility:</strong> Clients and servers who are "hybrid-aware", i.e., compliant with whatever hybrid key exchange standard is developed for TLS, should remain compatible with endpoints and middle-boxes that are not hybrid-aware.  The three scenarios to consider are:
            </t>
            <ol spacing="normal" type="1"><li>Hybrid-aware client, hybrid-aware server: These parties should establish a hybrid shared secret.</li>
              <li>Hybrid-aware client, non-hybrid-aware server:  These parties should establish a traditional shared secret (assuming the hybrid-aware client is willing to downgrade to traditional-only).</li>
              <li>Non-hybrid-aware client, hybrid-aware server:  These parties should establish a traditional shared secret (assuming the hybrid-aware server is willing to downgrade to traditional-only).</li>
            </ol>
            <t>
Ideally backwards compatibility should be achieved without extra round trips and without sending duplicate information; see below.</t>
          </li>
          <li>
            <strong>High performance:</strong> Use of hybrid key exchange should not be prohibitively expensive in terms of computational performance.  In general this will depend on the performance characteristics of the specific cryptographic algorithms used, and as such is outside the scope of this document.  See <xref target="PST"/> for preliminary results about performance characteristics.</li>
          <li>
            <t><strong>Low latency:</strong> Use of hybrid key exchange should not substantially increase the latency experienced to establish a connection.  Factors affecting this may include the following.
            </t>
            <ul spacing="normal">
              <li>The computational performance characteristics of the specific algorithms used.  See above.</li>
              <li>The size of messages to be transmitted.  Public key and ciphertext sizes for post-quantum algorithms range from hundreds of bytes to over one hundred kilobytes, so this impact can be substantial.  See <xref target="PST"/> for preliminary results in a laboratory setting, and <xref target="LANGLEY"/> for preliminary results on more realistic networks.</li>
              <li>Additional round trips added to the protocol.  See below.</li>
            </ul>
          </li>
          <li>
            <strong>No extra round trips:</strong> Attempting to negotiate hybrid key exchange should not lead to extra round trips in any of the three hybrid-aware/non-hybrid-aware scenarios listed above.</li>
          <li>
            <strong>Minimal duplicate information:</strong> Attempting to negotiate hybrid key exchange should not mean having to send multiple public keys of the same type.</li>
        </ul>
      </section>
    </section>
    <section anchor="kems">
      <name>Key encapsulation mechanisms</name>
      <t>This document models key agreement as key encapsulation mechanisms (KEMs), which consist of three algorithms:</t>
      <ul spacing="normal">
        <li>
          <tt>KeyGen() -&gt; (pk, sk)</tt>: A probabilistic key generation algorithm, which generates a public key <tt>pk</tt> and a secret key <tt>sk</tt>.</li>
        <li>
          <tt>Encaps(pk) -&gt; (ct, ss)</tt>: A probabilistic encapsulation algorithm, which takes as input a public key <tt>pk</tt> and outputs a ciphertext <tt>ct</tt> and shared secret <tt>ss</tt>.</li>
        <li>
          <tt>Decaps(sk, ct) -&gt; ss</tt>: A decapsulation algorithm, which takes as input a secret key <tt>sk</tt> and ciphertext <tt>ct</tt> and outputs a shared secret <tt>ss</tt>, or in some cases a distinguished error value.</li>
      </ul>
      <t>The main security property for KEMs is indistinguishability under adaptive chosen ciphertext attack (IND-CCA2), which means that shared secret values should be indistinguishable from random strings even given the ability to have other arbitrary ciphertexts decapsulated.  IND-CCA2 corresponds to security against an active attacker, and the public key / secret key pair can be treated as a long-term key or reused.  A common design pattern for obtaining security under key reuse is to apply the Fujisaki--Okamoto (FO) transform <xref target="FO"/> or a variant thereof <xref target="HHK"/>.</t>
      <t>A weaker security notion is indistinguishability under chosen plaintext attack (IND-CPA), which means that the shared secret values should be indistinguishable from random strings given a copy of the public key.  IND-CPA roughly corresponds to security against a passive attacker, and sometimes corresponds to one-time key exchange.</t>
      <t>Key exchange in TLS 1.3 is phrased in terms of Diffie--Hellman key exchange in a group.  DH key exchange can be modeled as a KEM, with <tt>KeyGen</tt> corresponding to selecting an exponent <tt>x</tt> as the secret key and computing the public key <tt>g^x</tt>; encapsulation corresponding to selecting an exponent <tt>y</tt>, computing the ciphertext <tt>g^y</tt> and the shared secret <tt>g^(xy)</tt>, and decapsulation as computing the shared secret <tt>g^(xy)</tt>. See <xref target="HPKE"/> for more details of such Diffie--Hellman-based key encapsulation mechanisms. Diffie--Hellman key exchange, when viewed as a KEM, does not formally satisfy IND-CCA2 security, but is still safe to use for ephemeral key exchange in TLS 1.3, see e.g. <xref target="DOWLING"/>.</t>
      <t>TLS 1.3 does not require that ephemeral public keys be used only in a single key exchange session; some implementations may reuse them, at the cost of limited forward secrecy.  As a result, any KEM used in the manner described in this document MUST explicitly be designed to be secure in the event that the public key is reused.  Finite-field and elliptic-curve Diffie--Hellman key exchange methods used in TLS 1.3 satisfy this criteria.  For generic KEMs, this means satisfying IND-CCA2 security or having a transform like the Fujisaki--Okamoto transform <xref target="FO"/> <xref target="HHK"/> applied.  While it is recommended that implementations avoid reuse of KEM public keys, implementations that do reuse KEM public keys MUST ensure that the number of reuses of a KEM public key abides by any bounds in the specification of the KEM or subsequent security analyses.  Implementations MUST NOT reuse randomness in the generation of KEM ciphertexts.</t>
    </section>
    <section anchor="construction">
      <name>Construction for hybrid key exchange</name>
      <section anchor="construction-negotiation">
        <name>Negotiation</name>
        <t>Each particular combination of algorithms in a hybrid key exchange will be represented as a <tt>NamedGroup</tt> and sent in the <tt>supported_groups</tt> extension.  No internal structure or grammar is implied or required in the value of the identifier; they are simply opaque identifiers.</t>
        <t>Each value representing a hybrid key exchange will correspond to an ordered pair of two or more algorithms.  For example, a future document could specify that one identifier corresponds to secp256r1+Kyber512, and another corresponds to x25519+Kyber512.  (We note that this is independent from future documents standardizing solely post-quantum key exchange methods, which would have to be assigned their own identifier.)</t>
        <t>Specific values shall be standardized by IANA in the TLS Supported Groups registry.</t>
        <artwork><![CDATA[
    enum {

          /* Elliptic Curve Groups (ECDHE) */
          secp256r1(0x0017), secp384r1(0x0018), secp521r1(0x0019),
          x25519(0x001D), x448(0x001E),

          /* Finite Field Groups (DHE) */
          ffdhe2048(0x0100), ffdhe3072(0x0101), ffdhe4096(0x0102),
          ffdhe6144(0x0103), ffdhe8192(0x0104),

          /* Hybrid Key Exchange Methods */
          x25519_kyber768(TBD), secp384r1_kyber768(TBD),
          x25519_kyber512(TBD), secp256r1_kyber512(TBD), ...,

          /* Reserved Code Points */
          ffdhe_private_use(0x01FC..0x01FF),
          ecdhe_private_use(0xFE00..0xFEFF),
          (0xFFFF)
    } NamedGroup;
]]></artwork>
      </section>
      <section anchor="construction-transmitting">
        <name>Transmitting public keys and ciphertexts</name>
        <t>We take the relatively simple "concatenation approach": the messages from the two or more algorithms being hybridized will be concatenated together and transmitted as a single value, to avoid having to change existing data structures.  The values are directly concatenated, without any additional encoding or length fields; this assumes that the representation and length of elements is fixed once the algorithm is fixed.  If concatenation were to be used with values that are not fixed-length, a length prefix or other unambiguous encoding must be used to ensure that the composition of the two values is injective and requires a mechanism different from that specified in this document.</t>
        <t>Recall that in TLS 1.3 a KEM public key or KEM ciphertext is represented as a <tt>KeyShareEntry</tt>:</t>
        <artwork><![CDATA[
    struct {
        NamedGroup group;
        opaque key_exchange<1..2^16-1>;
    } KeyShareEntry;
]]></artwork>
        <t>These are transmitted in the <tt>extension_data</tt> fields of <tt>KeyShareClientHello</tt> and <tt>KeyShareServerHello</tt> extensions:</t>
        <artwork><![CDATA[
    struct {
        KeyShareEntry client_shares<0..2^16-1>;
    } KeyShareClientHello;

    struct {
        KeyShareEntry server_share;
    } KeyShareServerHello;
]]></artwork>
        <t>The client's shares are listed in descending order of client preference; the server selects one algorithm and sends its corresponding share.</t>
        <t>For a hybrid key exchange, the <tt>key_exchange</tt> field of a <tt>KeyShareEntry</tt> is the concatenation of the <tt>key_exchange</tt> field for each of the constituent algorithms.  The order of shares in the concatenation is the same as the order of algorithms indicated in the definition of the <tt>NamedGroup</tt>.</t>
        <t>For the client's share, the <tt>key_exchange</tt> value contains the concatenation of the <tt>pk</tt> outputs of the corresponding KEMs' <tt>KeyGen</tt> algorithms, if that algorithm corresponds to a KEM; or the (EC)DH ephemeral key share, if that algorithm corresponds to an (EC)DH group.  For the server's share, the <tt>key_exchange</tt> value contains concatenation of the <tt>ct</tt> outputs of the corresponding KEMs' <tt>Encaps</tt> algorithms, if that algorithm corresponds to a KEM; or the (EC)DH ephemeral key share, if that algorithm corresponds to an (EC)DH group.</t>
        <t><xref target="TLS13"/> requires that ``The key_exchange values for each KeyShareEntry MUST be generated independently.''  In the context of this document, since the same algorithm may appear in multiple named groups, we relax the above requirement to allow the same key_exchange value for the same algorithm to be reused in multiple KeyShareEntry records sent in within the same <tt>ClientHello</tt>.  However, key_exchange values for different algorithms MUST be generated independently.</t>
      </section>
      <section anchor="construction-shared-secret">
        <name>Shared secret calculation</name>
        <t>Here we also take a simple "concatenation approach": the two shared secrets are concatenated together and used as the shared secret in the existing TLS 1.3 key schedule.  Again, we do not add any additional structure (length fields) in the concatenation procedure: for both the traditional groups and Kyber, the shared secret output length is fixed for a specific elliptic curve or parameter set.</t>
        <t>In other words, the shared secret is calculated as</t>
        <artwork><![CDATA[
    concatenated_shared_secret = shared_secret_1 || shared_secret_2
]]></artwork>
        <t>and inserted into the TLS 1.3 key schedule in place of the (EC)DHE shared secret:</t>
        <artwork><![CDATA[
                                    0
                                    |
                                    v
                      PSK ->  HKDF-Extract = Early Secret
                                    |
                                    +-----> Derive-Secret(...)
                                    +-----> Derive-Secret(...)
                                    +-----> Derive-Secret(...)
                                    |
                                    v
                              Derive-Secret(., "derived", "")
                                    |
                                    v
concatenated_shared_secret -> HKDF-Extract = Handshake Secret
^^^^^^^^^^^^^^^^^^^^^^^^^^          |
                                    +-----> Derive-Secret(...)
                                    +-----> Derive-Secret(...)
                                    |
                                    v
                              Derive-Secret(., "derived", "")
                                    |
                                    v
                         0 -> HKDF-Extract = Master Secret
                                    |
                                    +-----> Derive-Secret(...)
                                    +-----> Derive-Secret(...)
                                    +-----> Derive-Secret(...)
                                    +-----> Derive-Secret(...)
]]></artwork>
        <t><strong>FIPS-compliance of shared secret concatenation.</strong>
          <xref target="NIST-SP-800-56C"/> or <xref target="NIST-SP-800-135"/> give NIST recommendations for key derivation methods in key exchange protocols.  Some hybrid combinations may combine the shared secret from a NIST-approved algorithm (e.g., ECDH using the nistp256/secp256r1 curve) with a shared secret from a non-approved algorithm (e.g., post-quantum).  <xref target="NIST-SP-800-56C"/> lists simple concatenation as an approved method for generation of a hybrid shared secret in which one of the constituent shared secret is from an approved method.</t>
      </section>
    </section>
    <section anchor="discussion">
      <name>Discussion</name>
      <t><strong>Larger public keys and/or ciphertexts.</strong>
The <tt>HybridKeyExchange</tt> struct in <xref target="construction-transmitting"/> limits public keys and ciphertexts to 2^16-1 bytes; this is bounded by the same (2^16-1)-byte limit on the <tt>key_exchange</tt> field in the <tt>KeyShareEntry</tt> struct.  Some post-quantum KEMs have larger public keys and/or ciphertexts; for example, Classic McEliece's smallest parameter set has public key size 261,120 bytes.  However, all defined parameter sets for Kyber have public keys and ciphertexts that fall within the TLS constraints.</t>
      <t><strong>Duplication of key shares.</strong>
Concatenation of public keys in the <tt>HybridKeyExchange</tt> struct as described in <xref target="construction-transmitting"/> can result in sending duplicate key shares.  For example, if a client wanted to offer support for two combinations, say "secp256r1+kyber512" and "x25519+kyber512", it would end up sending two kyber512 public keys, since the <tt>KeyShareEntry</tt> for each combination contains its own copy of a kyber512 key.  This duplication may be more problematic for post-quantum algorithms which have larger public keys.  On the other hand, if the client wants to offer, for example "secp256r1+kyber512" and "secp256r1" (for backwards compatibility), there is relatively little duplicated data (as the secp256r1 keys are comparatively small).</t>
      <t><strong>Failures.</strong>
Some post-quantum key exchange algorithms, including Kyber, have non-zero probability of failure, meaning two honest parties may derive different shared secrets.  This would cause a handshake failure.  Kyber has a cryptographically small failure rate; if other algorithms are used, implementers should be aware of the potential of handshake failure. Clients can retry if a failure is encountered.</t>
    </section>
    <section anchor="defined-hybrid-groups">
      <name>Defined Hybrid Groups</name>
      <t>This document defines four initial hybrids for use within TLS 1.3</t>
      <artwork><![CDATA[
+--------------------+---------------------|-------------|
| Hybrid name        | Hybrid components   | Named Group |
+--------------------+---------------------|-------------|
| x25519_kyber768    | x25519, kyber768    | TBD         |
| secp384r1_kyber768 | secp384r1, kyber768 | TBD         |
| x25519_kyber512    | x25519, kyber512    | TBD         |
| secp256r1_kyber512 | secp256r1, kyber512 | TBD         |
+--------------------+---------------------|-------------|
]]></artwork>
      <t>where the components x25519, secp384r1, secp256r1 are the existing named groups.</t>
      <t>The intention is that the first two combinations (using kyber768) are for normal TLS sessions, while the latter two (using kyber512) are for sessions that have limits in record size or it is important to limit the total amount of communication.</t>
      <section anchor="kyber-version">
        <name>Kyber version</name>
        <t>For kyber512 and kyber768, this document refers to the same named parameter sets defined in the Round 3 submission of Kyber to NIST.  That submission defines two variants for each parameter set based on the symmetric primitives used.  This document uses the FIPS 202 varient (and not the "90s" varient); the FIPS 202 varient uses SHA-3 and SHAKE as its internal symmetric primitives.</t>
        <t>The Kyber team has updated their documentation twice since submitting to Round 3 (these updates are labeled as version 3.0.1 and 3.0.2), however neither modifies the FIPS 202 variant of Kyber.</t>
      </section>
      <section anchor="details-of-kyber-components">
        <name>Details of kyber components</name>
        <t>The listed kyber512, kyber768 components are the named parameter sets of the key exchange method kyber <xref target="Kyber"/>.
When it is used, the client selects an ephemeral private key, generates the corresponding public key, and transmits that (as a component) within its keyshare.
When the server receives this keyshare, it extracts the kyber public key, generates a ciphertext and shared secret.  It then transmits the ciphertext (as a component) within its keyshare.
When the client receives this keyshare, it extracts the kyber ciphertext, and uses its private key to generate the shared secret.
Both sides uses their copy of the shared secret as a component within the hybrid shared secret.
where the client's key share is the Kyber public key, and the server's key share is the</t>
      </section>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>IANA will assign identifiers from the TLS TLS Supported Groups section for the hybrid combinations defined in this document.
These assignments should be made in a range that is distinct from the Elliptic Curve Groups and the Finite Field Groups ranges.</t>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>The shared secrets computed in the hybrid key exchange should be computed in a way that achieves the "hybrid" property: the resulting secret is secure as long as at least one of the component key exchange algorithms is unbroken.  See <xref target="GIACON"/> and <xref target="BINDEL"/> for an investigation of these issues.  Under the assumption that shared secrets are fixed length once the combination is fixed, the construction from <xref target="construction-shared-secret"/> corresponds to the dual-PRF combiner of <xref target="BINDEL"/> which is shown to preserve security under the assumption that the hash function is a dual-PRF.</t>
      <t>As noted in <xref target="kems"/>, KEMs used in the manner described in this document MUST explicitly be designed to be secure in the event that the public key is reused, such as achieving IND-CCA2 security or having a transform like the Fujisaki--Okamoto transform applied.  Kyber has such security properties.  However, some other post-quantum KEMs are designed to be IND-CPA-secure (i.e., without countermeasures such as the FO transform) are completely insecure under public key reuse; for example, some lattice-based IND-CPA-secure KEMs are vulnerable to attacks that recover the private key after just a few thousand samples <xref target="FLUHRER"/>.</t>
      <t><strong>Public keys, ciphertexts, and secrets should be constant length.</strong>
This document assumes that the length of each public key, ciphertext, and shared secret is fixed once the algorithm is fixed.  This is the case for Kyber.</t>
      <t>Note that variable-length secrets are, generally speaking, dangerous.  In particular, when using key material of variable length and processing it using hash functions, a timing side channel may arise.  In broad terms, when the secret is longer, the hash function may need to process more blocks internally.  In some unfortunate circumstances, this has led to timing attacks, e.g. the Lucky Thirteen <xref target="LUCKY13"/> and Raccoon <xref target="RACCOON"/> attacks.</t>
      <t>Furthermore, <xref target="AVIRAM"/> identified a risk of using variable-length secrets when the hash function used in the key derivation function is no longer collision-resistant.</t>
      <t>Therefore, this specification MUST only be used with algorithms which have fixed-length shared secrets (after the variant has been fixed by the algorithm identifier in the <tt>NamedGroup</tt> negotiation in <xref target="construction-negotiation"/>).</t>
    </section>
    <section anchor="acknowledgements">
      <name>Acknowledgements</name>
      <t>These ideas have grown from discussions with many colleagues, including Christopher Wood, Matt Campagna, Eric Crockett, authors of the various hybrid Internet-Drafts and implementations cited in this document, and members of the TLS working group.  The immediate impetus for this document came from discussions with attendees at the Workshop on Post-Quantum Software in Mountain View, California, in January 2019.  Daniel J. Bernstein and Tanja Lange commented on the risks of reuse of ephemeral public keys.  Matt Campagna and the team at Amazon Web Services provided additional suggestions.  Nimrod Aviram proposed restricting to fixed-length secrets.</t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="TLS13">
          <front>
            <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
            <author fullname="E. Rescorla" initials="E." surname="Rescorla">
              <organization/>
            </author>
            <date month="August" year="2018"/>
            <abstract>
              <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol.  TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
              <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961.  This document also specifies new requirements for TLS 1.2 implementations.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8446"/>
          <seriesInfo name="DOI" value="10.17487/RFC8446"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="AVIRAM" target="https://mailarchive.ietf.org/arch/msg/tls/F4SVeL2xbGPaPB2GW_GkBbD_a5M/">
          <front>
            <title>[TLS] Combining Secrets in Hybrid Key Exchange in TLS 1.3</title>
            <author initials="" surname="Nimrod Aviram">
              <organization/>
            </author>
            <author initials="" surname="Benjamin Dowling">
              <organization/>
            </author>
            <author initials="" surname="Ilan Komargodski">
              <organization/>
            </author>
            <author initials="" surname="Kenny Paterson">
              <organization/>
            </author>
            <author initials="" surname="Eyal Ronen">
              <organization/>
            </author>
            <author initials="" surname="Eylon Yogev">
              <organization/>
            </author>
            <date year="2021" month="September" day="01"/>
          </front>
        </reference>
        <reference anchor="BCNS15">
          <front>
            <title>Post-Quantum Key Exchange for the TLS Protocol from the Ring Learning with Errors Problem</title>
            <author fullname="Joppe W. Bos" initials="J." surname="Bos">
              <organization/>
            </author>
            <author fullname="Craig Costello" initials="C." surname="Costello">
              <organization/>
            </author>
            <author fullname="Michael Naehrig" initials="M." surname="Naehrig">
              <organization/>
            </author>
            <author fullname="Douglas Stebila" initials="D." surname="Stebila">
              <organization/>
            </author>
            <date month="May" year="2015"/>
          </front>
          <seriesInfo name="2015 IEEE Symposium on Security and" value="Privacy"/>
          <seriesInfo name="DOI" value="10.1109/sp.2015.40"/>
        </reference>
        <reference anchor="BERNSTEIN">
          <front>
            <title>Post-Quantum Cryptography</title>
            <author>
              <organization/>
            </author>
            <date year="2009"/>
          </front>
          <seriesInfo name="Springer Berlin Heidelberg" value="book"/>
          <seriesInfo name="DOI" value="10.1007/978-3-540-88702-7"/>
        </reference>
        <reference anchor="BINDEL">
          <front>
            <title>Hybrid Key Encapsulation Mechanisms and Authenticated Key Exchange</title>
            <author fullname="Nina Bindel" initials="N." surname="Bindel">
              <organization/>
            </author>
            <author fullname="Jacqueline Brendel" initials="J." surname="Brendel">
              <organization/>
            </author>
            <author fullname="Marc Fischlin" initials="M." surname="Fischlin">
              <organization/>
            </author>
            <author fullname="Brian Goncalves" initials="B." surname="Goncalves">
              <organization/>
            </author>
            <author fullname="Douglas Stebila" initials="D." surname="Stebila">
              <organization/>
            </author>
            <date year="2019"/>
          </front>
          <seriesInfo name="Post-Quantum Cryptography" value="pp. 206-226"/>
          <seriesInfo name="DOI" value="10.1007/978-3-030-25510-7_12"/>
        </reference>
        <reference anchor="CAMPAGNA">
          <front>
            <title>Hybrid Post-Quantum Key Encapsulation Methods (PQ KEM) for Transport Layer Security 1.2 (TLS)</title>
            <author fullname="Matt Campagna">
              <organization>AWS</organization>
            </author>
            <author fullname="Eric Crockett">
              <organization>AWS</organization>
            </author>
            <date day="2" month="September" year="2021"/>
            <abstract>
              <t>   Hybrid key exchange refers to executing two independent key exchanges
   and feeding the two resulting shared secrets into a Pseudo Random
   Function (PRF), with the goal of deriving a secret which is as secure
   as the stronger of the two key exchanges.  This document describes
   new hybrid key exchange schemes for the Transport Layer Security 1.2
   (TLS) protocol.  The key exchange schemes are based on combining
   Elliptic Curve Diffie-Hellman (ECDH) with a post-quantum key
   encapsulation method (PQ KEM) using the existing TLS PRF.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-campagna-tls-bike-sike-hybrid-07"/>
        </reference>
        <reference anchor="CECPQ1" target="https://security.googleblog.com/2016/07/experimenting-with-post-quantum.html">
          <front>
            <title>Experimenting with Post-Quantum Cryptography</title>
            <author initials="M." surname="Braithwaite">
              <organization/>
            </author>
            <date year="2016" month="July" day="07"/>
          </front>
        </reference>
        <reference anchor="CECPQ2" target="https://www.imperialviolet.org/2018/12/12/cecpq2.html">
          <front>
            <title>CECPQ2</title>
            <author initials="A." surname="Langley">
              <organization/>
            </author>
            <date year="2018" month="December" day="12"/>
          </front>
        </reference>
        <reference anchor="DODIS">
          <front>
            <title>Chosen-Ciphertext Security of Multiple Encryption</title>
            <author fullname="Yevgeniy Dodis" initials="Y." surname="Dodis">
              <organization/>
            </author>
            <author fullname="Jonathan Katz" initials="J." surname="Katz">
              <organization/>
            </author>
            <date year="2005"/>
          </front>
          <seriesInfo name="Theory of Cryptography" value="pp. 188-209"/>
          <seriesInfo name="DOI" value="10.1007/978-3-540-30576-7_11"/>
        </reference>
        <reference anchor="DOWLING">
          <front>
            <title>A Cryptographic Analysis of the TLS 1.3 Handshake Protocol</title>
            <author fullname="Benjamin Dowling" initials="B." surname="Dowling">
              <organization/>
            </author>
            <author fullname="Marc Fischlin" initials="M." surname="Fischlin">
              <organization/>
            </author>
            <author fullname="Felix Günther" initials="F." surname="Günther">
              <organization/>
            </author>
            <author fullname="Douglas Stebila" initials="D." surname="Stebila">
              <organization/>
            </author>
            <date month="July" year="2021"/>
          </front>
          <seriesInfo name="Journal of Cryptology" value="vol. 34, no. 4"/>
          <seriesInfo name="DOI" value="10.1007/s00145-021-09384-1"/>
        </reference>
        <reference anchor="ETSI" target="https://www.etsi.org/images/files/ETSIWhitePapers/QuantumSafeWhitepaper.pdf">
          <front>
            <title>Quantum safe cryptography and security: An introduction, benefits, enablers and challengers</title>
            <author initials="M." surname="Campagna" role="editor">
              <organization/>
            </author>
            <author initials="" surname="others">
              <organization/>
            </author>
            <date year="2015" month="June"/>
          </front>
          <seriesInfo name="ETSI White Paper No. 8" value=""/>
        </reference>
        <reference anchor="EVEN">
          <front>
            <title>On the Power of Cascade Ciphers</title>
            <author fullname="S. Even" initials="S." surname="Even">
              <organization/>
            </author>
            <author fullname="O. Goldreich" initials="O." surname="Goldreich">
              <organization/>
            </author>
            <date year="1984"/>
          </front>
          <seriesInfo name="Advances in Cryptology" value="pp. 43-50"/>
          <seriesInfo name="DOI" value="10.1007/978-1-4684-4730-9_4"/>
        </reference>
        <reference anchor="EXTERN-PSK">
          <front>
            <title>TLS 1.3 Extension for Certificate-Based Authentication with an External Pre-Shared Key</title>
            <author fullname="R. Housley" initials="R." surname="Housley">
              <organization/>
            </author>
            <date month="March" year="2020"/>
            <abstract>
              <t>This document specifies a TLS 1.3 extension that allows a server to authenticate with a combination of a certificate and an external pre-shared key (PSK).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8773"/>
          <seriesInfo name="DOI" value="10.17487/RFC8773"/>
        </reference>
        <reference anchor="FLUHRER" target="https://eprint.iacr.org/2016/085">
          <front>
            <title>Cryptanalysis of ring-LWE based key exchange with key share reuse</title>
            <author initials="S." surname="Fluhrer">
              <organization/>
            </author>
            <date year="2016" month="January"/>
          </front>
          <seriesInfo name="Cryptology ePrint Archive, Report 2016/085" value=""/>
        </reference>
        <reference anchor="FO">
          <front>
            <title>Secure Integration of Asymmetric and Symmetric Encryption Schemes</title>
            <author fullname="Eiichiro Fujisaki" initials="E." surname="Fujisaki">
              <organization/>
            </author>
            <author fullname="Tatsuaki Okamoto" initials="T." surname="Okamoto">
              <organization/>
            </author>
            <date month="December" year="2011"/>
          </front>
          <seriesInfo name="Journal of Cryptology" value="vol. 26, no. 1, pp. 80-101"/>
          <seriesInfo name="DOI" value="10.1007/s00145-011-9114-1"/>
        </reference>
        <reference anchor="FRODO">
          <front>
            <title>Frodo: Take off the Ring! Practical, Quantum-Secure Key Exchange from LWE</title>
            <author fullname="Joppe Bos" initials="J." surname="Bos">
              <organization>NXP Semiconductors, Eindhoven, Netherlands</organization>
            </author>
            <author fullname="Craig Costello" initials="C." surname="Costello">
              <organization>Microsoft Research, Redmond, WA, USA</organization>
            </author>
            <author fullname="Leo Ducas" initials="L." surname="Ducas">
              <organization>CWI, Amsterdam, Netherlands</organization>
            </author>
            <author fullname="Ilya Mironov" initials="I." surname="Mironov">
              <organization>Google, Mountain View, CA, USA</organization>
            </author>
            <author fullname="Michael Naehrig" initials="M." surname="Naehrig">
              <organization>Microsoft Research, Redmond, WA, USA</organization>
            </author>
            <author fullname="Valeria Nikolaenko" initials="V." surname="Nikolaenko">
              <organization>Stanford University, Stanford, CA, USA</organization>
            </author>
            <author fullname="Ananth Raghunathan" initials="A." surname="Raghunathan">
              <organization>Google, Mountain View, CA, USA</organization>
            </author>
            <author fullname="Douglas Stebila" initials="D." surname="Stebila">
              <organization>McMaster University, Hamilton, ON, Canada</organization>
            </author>
            <date month="October" year="2016"/>
          </front>
          <seriesInfo name="Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications" value="Security"/>
          <seriesInfo name="DOI" value="10.1145/2976749.2978425"/>
        </reference>
        <reference anchor="GIACON">
          <front>
            <title>KEM Combiners</title>
            <author fullname="Federico Giacon" initials="F." surname="Giacon">
              <organization/>
            </author>
            <author fullname="Felix Heuer" initials="F." surname="Heuer">
              <organization/>
            </author>
            <author fullname="Bertram Poettering" initials="B." surname="Poettering">
              <organization/>
            </author>
            <date year="2018"/>
          </front>
          <seriesInfo name="Public-Key Cryptography - PKC 2018" value="pp. 190-218"/>
          <seriesInfo name="DOI" value="10.1007/978-3-319-76578-5_7"/>
        </reference>
        <reference anchor="HARNIK">
          <front>
            <title>On Robust Combiners for Oblivious Transfer and Other Primitives</title>
            <author fullname="Danny Harnik" initials="D." surname="Harnik">
              <organization/>
            </author>
            <author fullname="Joe Kilian" initials="J." surname="Kilian">
              <organization/>
            </author>
            <author fullname="Moni Naor" initials="M." surname="Naor">
              <organization/>
            </author>
            <author fullname="Omer Reingold" initials="O." surname="Reingold">
              <organization/>
            </author>
            <author fullname="Alon Rosen" initials="A." surname="Rosen">
              <organization/>
            </author>
            <date year="2005"/>
          </front>
          <seriesInfo name="Lecture Notes in Computer Science" value="pp. 96-113"/>
          <seriesInfo name="DOI" value="10.1007/11426639_6"/>
        </reference>
        <reference anchor="HOFFMAN">
          <front>
            <title>The Transition from Classical to Post-Quantum Cryptography</title>
            <author fullname="Paul Hoffman">
              <organization>ICANN</organization>
            </author>
            <date day="26" month="May" year="2020"/>
            <abstract>
              <t>   Quantum computing is the study of computers that use quantum features
   in calculations.  For over 20 years, it has been known that if very
   large, specialized quantum computers could be built, they could have
   a devastating effect on asymmetric classical cryptographic algorithms
   such as RSA and elliptic curve signatures and key exchange, as well
   as (but in smaller scale) on symmetric cryptographic algorithms such
   as block ciphers, MACs, and hash functions.  There has already been a
   great deal of study on how to create algorithms that will resist
   large, specialized quantum computers, but so far, the properties of
   those algorithms make them onerous to adopt before they are needed.

   Small quantum computers are being built today, but it is still far
   from clear when large, specialized quantum computers will be built
   that can recover private or secret keys in classical algorithms at
   the key sizes commonly used today.  It is important to be able to
   predict when large, specialized quantum computers usable for
   cryptanalysis will be possible so that organization can change to
   post-quantum cryptographic algorithms well before they are needed.

   This document describes quantum computing, how it might be used to
   attack classical cryptographic algorithms, and possibly how to
   predict when large, specialized quantum computers will become
   feasible.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-hoffman-c2pq-07"/>
        </reference>
        <reference anchor="HHK">
          <front>
            <title>A Modular Analysis of the Fujisaki-Okamoto Transformation</title>
            <author fullname="Dennis Hofheinz" initials="D." surname="Hofheinz">
              <organization/>
            </author>
            <author fullname="Kathrin Hövelmanns" initials="K." surname="Hövelmanns">
              <organization/>
            </author>
            <author fullname="Eike Kiltz" initials="E." surname="Kiltz">
              <organization/>
            </author>
            <date year="2017"/>
          </front>
          <seriesInfo name="Theory of Cryptography" value="pp. 341-371"/>
          <seriesInfo name="DOI" value="10.1007/978-3-319-70500-2_12"/>
        </reference>
        <reference anchor="HPKE">
          <front>
            <title>Hybrid Public Key Encryption</title>
            <author fullname="R. Barnes" initials="R." surname="Barnes">
              <organization/>
            </author>
            <author fullname="K. Bhargavan" initials="K." surname="Bhargavan">
              <organization/>
            </author>
            <author fullname="B. Lipp" initials="B." surname="Lipp">
              <organization/>
            </author>
            <author fullname="C. Wood" initials="C." surname="Wood">
              <organization/>
            </author>
            <date month="February" year="2022"/>
            <abstract>
              <t>This document describes a scheme for hybrid public key encryption (HPKE). This scheme provides a variant of public key encryption of arbitrary-sized plaintexts for a recipient public key. It also includes three authenticated variants, including one that authenticates possession of a pre-shared key and two optional ones that authenticate possession of a key encapsulation mechanism (KEM) private key. HPKE works for any combination of an asymmetric KEM, key derivation function (KDF), and authenticated encryption with additional data (AEAD) encryption function. Some authenticated variants may not be supported by all KEMs. We provide instantiations of the scheme using widely used and efficient primitives, such as Elliptic Curve Diffie-Hellman (ECDH) key agreement, HMAC-based key derivation function (HKDF), and SHA2.</t>
              <t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9180"/>
          <seriesInfo name="DOI" value="10.17487/RFC9180"/>
        </reference>
        <reference anchor="IKE-HYBRID">
          <front>
            <title>Framework to Integrate Post-quantum Key Exchanges into Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author fullname="C. Tjhai">
              <organization>Post-Quantum</organization>
            </author>
            <author fullname="M. Tomlinson">
              <organization>Post-Quantum</organization>
            </author>
            <author fullname="G. Bartlett">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="S. Fluhrer">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="D. Van Geest">
              <organization>ISARA Corporation</organization>
            </author>
            <author fullname="O. Garcia-Morchon">
              <organization>Philips</organization>
            </author>
            <author fullname="Valery Smyslov">
              <organization>ELVIS-PLUS</organization>
            </author>
            <date day="9" month="July" year="2019"/>
            <abstract>
              <t>   This document describes how to extend Internet Key Exchange Protocol
   Version 2 (IKEv2) so that the shared secret exchanged between peers
   has resistance against quantum computer attacks.  The basic idea is
   to exchange one or more post-quantum key exchange payloads in
   conjunction with the existing (Elliptic Curve) Diffie-Hellman
   payload.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-tjhai-ipsecme-hybrid-qske-ikev2-04"/>
        </reference>
        <reference anchor="IKE-PSK">
          <front>
            <title>Mixing Preshared Keys in the Internet Key Exchange Protocol Version 2 (IKEv2) for Post-quantum Security</title>
            <author fullname="S. Fluhrer" initials="S." surname="Fluhrer">
              <organization/>
            </author>
            <author fullname="P. Kampanakis" initials="P." surname="Kampanakis">
              <organization/>
            </author>
            <author fullname="D. McGrew" initials="D." surname="McGrew">
              <organization/>
            </author>
            <author fullname="V. Smyslov" initials="V." surname="Smyslov">
              <organization/>
            </author>
            <date month="June" year="2020"/>
            <abstract>
              <t>The possibility of quantum computers poses a serious challenge to cryptographic algorithms deployed widely today.  The Internet Key Exchange Protocol Version 2 (IKEv2) is one example of a cryptosystem that could be broken; someone storing VPN communications today could decrypt them at a later time when a quantum computer is available.  It is anticipated that IKEv2 will be extended to support quantum-secure key exchange algorithms; however, that is not likely to happen in the near term.  To address this problem before then, this document describes an extension of IKEv2 to allow it to be resistant to a quantum computer by using preshared keys.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8784"/>
          <seriesInfo name="DOI" value="10.17487/RFC8784"/>
        </reference>
        <reference anchor="KIEFER">
          <front>
            <title>Hybrid ECDHE-SIDH Key Exchange for TLS</title>
            <author fullname="Franziskus Kiefer">
              <organization>Mozilla</organization>
            </author>
            <author fullname="Krzysztof Kwiatkowski">
              <organization>Cloudflare</organization>
            </author>
            <date day="5" month="November" year="2018"/>
            <abstract>
              <t>   This draft specifies a TLS key exchange that combines the post-
   quantum key exchange, Supersingular elliptic curve isogenie diffie-
   hellman (SIDH), with elliptic curve Diffie-Hellman (ECDHE) key
   exchange.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-kiefer-tls-ecdhe-sidh-00"/>
        </reference>
        <reference anchor="Kyber" target="https://csrc.nist.gov/CSRC/media/Projects/post-quantum-cryptography/documents/round-3/submissions/Kyber-Round3.zip">
          <front>
            <title>Crystals-Kyber NIST Round 3 submission</title>
            <author initials="" surname="Roberto Avanzi, Joppe Bos, Léo Ducas, Eike Kiltz, Tancrède Lepoint, Vadim Lyubashevsky, John M Schanck, Peter Schwabe, Gregor Seiler, Damien Stehlé">
              <organization/>
            </author>
            <date year="2020" month="October" day="01"/>
          </front>
        </reference>
        <reference anchor="LANGLEY" target="https://www.imperialviolet.org/2018/04/11/pqconftls.html">
          <front>
            <title>Post-quantum confidentiality for TLS</title>
            <author initials="A." surname="Langley">
              <organization/>
            </author>
            <date year="2018" month="April" day="11"/>
          </front>
        </reference>
        <reference anchor="LUCKY13" target="https://ieeexplore.ieee.org/iel7/6547086/6547088/06547131.pdf">
          <front>
            <title>Lucky Thirteen: Breaking the TLS and DTLS record protocols</title>
            <author initials="N. J." surname="Al Fardan">
              <organization/>
            </author>
            <author initials="K. G." surname="Paterson">
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="NIELSEN">
          <front>
            <title>Quantum Computation and Quantum Information</title>
            <author initials="M. A." surname="Nielsen">
              <organization/>
            </author>
            <author initials="I. L." surname="Chuang">
              <organization/>
            </author>
            <date year="2000"/>
          </front>
          <seriesInfo name="Cambridge University Press" value=""/>
        </reference>
        <reference anchor="NIST" target="https://www.nist.gov/pqcrypto">
          <front>
            <title>Post-Quantum Cryptography</title>
            <author>
              <organization>National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="NIST-SP-800-56C" target="https://doi.org/10.6028/NIST.SP.800-56Cr2">
          <front>
            <title>Recommendation for Key-Derivation Methods in Key-Establishment Schemes</title>
            <author>
              <organization>National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date year="2020" month="August"/>
          </front>
        </reference>
        <reference anchor="NIST-SP-800-135" target="https://doi.org/10.6028/NIST.SP.800-135r1">
          <front>
            <title>Recommendation for Existing Application-Specific Key Derivation Functions</title>
            <author>
              <organization>National Institute of Standards and Technology (NIST)</organization>
            </author>
            <date year="2011" month="December"/>
          </front>
        </reference>
        <reference anchor="OQS-102" target="https://github.com/open-quantum-safe/openssl/tree/OQS-OpenSSL_1_0_2-stable">
          <front>
            <title>OQS-OpenSSL-1-0-2_stable</title>
            <author>
              <organization>Open Quantum Safe Project</organization>
            </author>
            <date year="2018" month="November"/>
          </front>
        </reference>
        <reference anchor="OQS-111" target="https://github.com/open-quantum-safe/openssl/tree/OQS-OpenSSL_1_1_1-stable">
          <front>
            <title>OQS-OpenSSL-1-1-1_stable</title>
            <author>
              <organization>Open Quantum Safe Project</organization>
            </author>
            <date year="2022" month="January"/>
          </front>
        </reference>
        <reference anchor="PST">
          <front>
            <title>Benchmarking Post-quantum Cryptography in TLS</title>
            <author fullname="Christian Paquin" initials="C." surname="Paquin">
              <organization/>
            </author>
            <author fullname="Douglas Stebila" initials="D." surname="Stebila">
              <organization/>
            </author>
            <author fullname="Goutam Tamvada" initials="G." surname="Tamvada">
              <organization/>
            </author>
            <date year="2020"/>
          </front>
          <seriesInfo name="Post-Quantum Cryptography" value="pp. 72-91"/>
          <seriesInfo name="DOI" value="10.1007/978-3-030-44223-1_5"/>
        </reference>
        <reference anchor="RACCOON" target="https://raccoon-attack.com/">
          <front>
            <title>Raccoon Attack: Finding and Exploiting Most-Significant-Bit-Oracles in TLS-DH(E)</title>
            <author initials="R." surname="Merget">
              <organization/>
            </author>
            <author initials="M." surname="Brinkmann">
              <organization/>
            </author>
            <author initials="N." surname="Aviram">
              <organization/>
            </author>
            <author initials="J." surname="Somorovsky">
              <organization/>
            </author>
            <author initials="J." surname="Mittmann">
              <organization/>
            </author>
            <author initials="J." surname="Schwenk">
              <organization/>
            </author>
            <date year="2020" month="September"/>
          </front>
        </reference>
        <reference anchor="S2N" target="https://aws.amazon.com/blogs/security/post-quantum-tls-now-supported-in-aws-kms/">
          <front>
            <title>Post-quantum TLS now supported in AWS KMS</title>
            <author>
              <organization>Amazon Web Services</organization>
            </author>
            <date year="2019" month="November" day="04"/>
          </front>
        </reference>
        <reference anchor="SCHANCK">
          <front>
            <title>A Transport Layer Security (TLS) Extension For Establishing An Additional Shared Secret</title>
            <author fullname="John M. Schanck">
	 </author>
            <author fullname="Douglas Stebila">
	 </author>
            <date day="17" month="April" year="2017"/>
            <abstract>
              <t>   This document defines a Transport Layer Security (TLS) extension that
   allows parties to establish an additional shared secret using a
   second key exchange algorithm and incorporates this shared secret
   into the TLS key schedule.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-schanck-tls-additional-keyshare-00"/>
        </reference>
        <reference anchor="WHYTE12">
          <front>
            <title>Quantum-Safe Hybrid (QSH) Ciphersuite for Transport Layer Security (TLS) version 1.2</title>
            <author fullname="John M. Schanck">
	 </author>
            <author fullname="William Whyte">
	 </author>
            <author fullname="Zhenfei Zhang">
	 </author>
            <date day="22" month="July" year="2016"/>
            <abstract>
              <t>   This document describes the Quantum-Safe Hybrid ciphersuite, a new
   cipher suite providing modular design for quantum-safe cryptography
   to be adopted in the handshake for the Transport Layer Security (TLS)
   protocol version 1.2.  In particular, it specifies the use of the
   NTRUEncrypt encryption scheme in a TLS handshake.




              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-whyte-qsh-tls12-02"/>
        </reference>
        <reference anchor="WHYTE13">
          <front>
            <title>Quantum-Safe Hybrid (QSH) Key Exchange for Transport Layer Security (TLS) version 1.3</title>
            <author fullname="William Whyte">
              <organization>Onboard Security</organization>
            </author>
            <author fullname="Zhenfei Zhang">
              <organization>Onboard Security</organization>
            </author>
            <author fullname="Scott Fluhrer">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Oscar Garcia-Morchon">
              <organization>Philips</organization>
            </author>
            <date day="3" month="October" year="2017"/>
            <abstract>
              <t>   This document describes the Quantum-Safe Hybrid Key Exchange, a
   mechanism for providing modular design for quantum-safe cryptography
   to be adopted in the handshake for the Transport Layer Security (TLS)
   protocol version 1.3.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-whyte-qsh-tls13-06"/>
        </reference>
        <reference anchor="XMSS">
          <front>
            <title>XMSS: eXtended Merkle Signature Scheme</title>
            <author fullname="A. Huelsing" initials="A." surname="Huelsing">
              <organization/>
            </author>
            <author fullname="D. Butin" initials="D." surname="Butin">
              <organization/>
            </author>
            <author fullname="S. Gazdag" initials="S." surname="Gazdag">
              <organization/>
            </author>
            <author fullname="J. Rijneveld" initials="J." surname="Rijneveld">
              <organization/>
            </author>
            <author fullname="A. Mohaisen" initials="A." surname="Mohaisen">
              <organization/>
            </author>
            <date month="May" year="2018"/>
            <abstract>
              <t>This note describes the eXtended Merkle Signature Scheme (XMSS), a hash-based digital signature system that is based on existing descriptions in scientific literature.  This note specifies Winternitz One-Time Signature Plus (WOTS+), a one-time signature scheme; XMSS, a single-tree scheme; and XMSS^MT, a multi-tree variant of XMSS.  Both XMSS and XMSS^MT use WOTS+ as a main building block. XMSS provides cryptographic digital signatures without relying on the conjectured hardness of mathematical problems.  Instead, it is proven that it only relies on the properties of cryptographic hash functions.  XMSS provides strong security guarantees and is even secure when the collision resistance of the underlying hash function is broken.  It is suitable for compact implementations, is relatively simple to implement, and naturally resists side-channel attacks. Unlike most other signature systems, hash-based signatures can so far withstand known attacks using quantum computers.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8391"/>
          <seriesInfo name="DOI" value="10.17487/RFC8391"/>
        </reference>
        <reference anchor="ZHANG">
          <front>
            <title>On the Security of Multiple Encryption or CCA-security+CCA-security=CCA-security?</title>
            <author fullname="Rui Zhang" initials="R." surname="Zhang">
              <organization/>
            </author>
            <author fullname="Goichiro Hanaoka" initials="G." surname="Hanaoka">
              <organization/>
            </author>
            <author fullname="Junji Shikata" initials="J." surname="Shikata">
              <organization/>
            </author>
            <author fullname="Hideki Imai" initials="H." surname="Imai">
              <organization/>
            </author>
            <date year="2004"/>
          </front>
          <seriesInfo name="Public Key Cryptography - PKC 2004" value="pp. 360-374"/>
          <seriesInfo name="DOI" value="10.1007/978-3-540-24632-9_26"/>
        </reference>
        <reference anchor="I-D.driscoll-pqt-hybrid-terminology">
          <front>
            <title>Terminology for Post-Quantum Traditional Hybrid Schemes</title>
            <author fullname="Florence Driscoll">
              <organization>UK National Cyber Security Centre</organization>
            </author>
            <date day="8" month="July" year="2022"/>
            <abstract>
              <t>   One aspect of the transition to post-quantum algorithms in
   cryptographic protocols is the development of hybrid schemes that
   incorporate both post-quantum and traditional asymmetric algorithms.
   This document defines terminology for such schemes.  It is intended
   to ensure consistency and clarity across different protocols,
   standards, and organisations.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-driscoll-pqt-hybrid-terminology-00"/>
        </reference>
      </references>
    </references>
    <section anchor="related-work">
      <name>Related work</name>
      <t>Quantum computing and post-quantum cryptography in general are outside the scope of this document.  For a general introduction to quantum computing, see a standard textbook such as <xref target="NIELSEN"/>.  For an overview of post-quantum cryptography as of 2009, see <xref target="BERNSTEIN"/>.  For the current status of the NIST Post-Quantum Cryptography Standardization Project, see <xref target="NIST"/>.  For additional perspectives on the general transition from traditional to post-quantum cryptography, see for example <xref target="ETSI"/> and <xref target="HOFFMAN"/>, among others.</t>
      <t>There have been several Internet-Drafts describing mechanisms for embedding post-quantum and/or hybrid key exchange in TLS:</t>
      <ul spacing="normal">
        <li>Internet-Drafts for TLS 1.2: <xref target="WHYTE12"/>, <xref target="CAMPAGNA"/></li>
        <li>Internet-Drafts for TLS 1.3: <xref target="KIEFER"/>, <xref target="SCHANCK"/>, <xref target="WHYTE13"/></li>
      </ul>
      <t>There have been several prototype implementations for post-quantum and/or hybrid key exchange in TLS:</t>
      <ul spacing="normal">
        <li>Experimental implementations in TLS 1.2: <xref target="BCNS15"/>, <xref target="CECPQ1"/>, <xref target="FRODO"/>, <xref target="OQS-102"/>, <xref target="S2N"/></li>
        <li>Experimental implementations in TLS 1.3: <xref target="CECPQ2"/>, <xref target="OQS-111"/>, <xref target="PST"/></li>
      </ul>
      <t>These experimental implementations have taken an ad hoc approach and not attempted to implement one of the drafts listed above.</t>
      <t>Unrelated to post-quantum but still related to the issue of combining multiple types of keying material in TLS is the use of pre-shared keys, especially the recent TLS working group document on including an external pre-shared key <xref target="EXTERN-PSK"/>.</t>
      <t>Considering other IETF standards, there is work on post-quantum preshared keys in IKEv2 <xref target="IKE-PSK"/> and a framework for hybrid key exchange in IKEv2 <xref target="IKE-HYBRID"/>.  The XMSS hash-based signature scheme has been published as an informational RFC by the IRTF <xref target="XMSS"/>.</t>
      <t>In the academic literature, <xref target="EVEN"/> initiated the study of combining multiple symmetric encryption schemes; <xref target="ZHANG"/>, <xref target="DODIS"/>, and <xref target="HARNIK"/> examined combining multiple public key encryption schemes, and <xref target="HARNIK"/> coined the term "robust combiner" to refer to a compiler that constructs a hybrid scheme from individual schemes while preserving security properties.  <xref target="GIACON"/> and <xref target="BINDEL"/> examined combining multiple key encapsulation mechanisms.</t>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIAAAAAAAAA+1961bjSJrgf55Ch/xRkGMZ21ySJGd7mwST0CQkjanKrp0z
nYTlsK1CllwKCdJFZT/PzHP0i+13Cykky0Bt1ZzdPWeyLgl2KC5ffPebfN9f
y8Is0gfe6WKYhiPvTi88/TWYqniivTD2bj4OvG57e00Nh6m+P/BCnY39LDL+
lMb7I23CSbw2SoJYzWCaUarGmd88yu/sro1UBqN6nV7P7+z7vf21AD6YJOkC
po7HydpaOE8PvCzNTdbrdN52emuwo4ckHR14Z3Gm01hn/jGusbZmMhWPvqgo
iWHGhTZr8/DA+7csCVqeSdIs1WMDPy1m+MO/w/B8OAuNCZP4ZjGHJ876Nydr
ayrPpkl6sOZ5PvznwSbMgXfc9gaZHoaRos/4ZMdJPomUqXyTpBMVh7+oDGY9
8L6Pw3udmjBbeMnY+wwHS6MkoYF6psIIoGP44T/nD/JtO1DVtQdt7yTKp6lO
nbUHQZJllc+rKx+FJki8wQKmnxl3QTPmZ/4c4Ih2kMyWVvuQ6zSJ3cWmauF+
+tQhT1U4Vh7cg3c4U78ksfdZD72BTu/DQPNGLOJ83+bBrZUj7ZZh+faElv/z
BD+iXa/FSTqDLdxrvCvAyu72gXd9crS/s7MHSAOo43x9+MPZ9eHFAc2aqXSi
swNvmmVzc7C1hTOqNJjC0DaiaRuOt4UfbM3MZAtwdutkZ/CD/tj7Ovxwpa7e
9z58/vLh7v3w+IvavdjiKZli1v8NtvHv3lEyG4ZxGE/gNEGqM4NkI9R0DtTU
X6amdZqmIIWu33nrd7oMrgIf8Y8vf8ttXYazNAFQ34epmjUPea/jn9QMljpO
HiLYVPOos0jF3nkyA9gkI3MXNo8613G88K4QU43gwtKY/kJF3jWQ4MrvgT69
H5OJvocv3h9dDrq7QEufztrdTrvb7bzdGly1e53ubnungwP615eDm/7ZZTmm
03mz9fbNvr/t7+50/P39N52e/waHnl0e9z82jetsd/ze7m6347/50u3B0KPD
i6vDD5eHcHD/GChuNleTWBGDGoZ32jf4P2ZVOLp/dPXXbjP2GB3kKeB+e5Ik
k0gPo2SC6LkFJ9jbgg3or3OdhjMdZwB7/yHMpv48MZn/c67iLJ+1p9kscnGo
7473cLx3heP/yuO9o3Qxz5JJqubTxfP4cdH23qcKJnmA/+kKknX3/M4b+Nee
r9d8voeHh3Y4wz2p6D5MIp0RfcDz+1vdHv4b6GD+c2/pIDzp81s8bHsfgRoi
vahub9/v9ny6rONPx2eDVde/3dl9s4fX2qWRnz+eXX6ojjWdTndn12eq2t7f
8XFk/2ZwtvrAQLMhHTOcqYk2W+Mwgv/jM5+nAMcrBfAwW3IlAzXW9PEcP27P
R+MKT7AXZ2CYFzi3R0zSog/AIQZ4ZEDNeYB8teUNdazHYQYiS8dqGMGK9ATw
jijSwD5Ss/4kdNME19ejMEvSJaw4EpRvvpMkm8L09JmBmwdZDez0gIDm0VE9
AoF3mbS9/eq1AaD3EL4/9Bsotuvv7MEF7LwBenz7ZQfH/e0GCNy/Gpwz837z
Zhs+Pfn4/el1/7r5gvQ8BUC1QxWkFhWB0vZ3K1AnMlGxihYmNCiXUiS/j5/7
3lAZXdNqiMrwE5A0qfZSnRv9NGybBLMLKaZS4AWwyhVu1ztkCdPyrvUcdBGv
smuXJhE7Tz41o3C367/tdhmDT64/HTvD4Put3ts3e2923rbh7/2dHk794ezw
6FMj69zuvvXf7O3Cz7tfkAecHl5fnp1XR8Kkvb297bdf8EZPP52cXBxeMsec
JuPxTMV+0Jv/jN+dnq9co7PbAebLbPf06rxP9/y2u4/M/ey875/++P767Jin
zX6aqtAP50AVM8t//Z8N8GLgx/c9eaJEln1EofOz/gngCk1wF+qxTomP62A0
RUY+muKYxVCnzegUmDRox6HJgIPfbx0Nro+2ZkA0ausqTX7SQWa2XH7tuxS8
BUpujqzabKVJHo/87a1SpzRbtKh/jd9st38J5xXumIJqpmCbNMi7PBvceDTS
2/bKOZ7HwesEHs8S0ABU/EvY8v6SzOfae58A1/j4z/9MvOM8UPBzH+DnnYdR
9kvLu1FxkP7zP0ba+wioCLjZ8n5Qo3DmfVzkQBxTfW/uFjjTNEZOMUAiCe5a
3pUGsY+/Pqgh4PGHFLV0UHGAN6Yt7xh0DB2jLjyN/vmfVXWm44PkJcT+eHj5
4WP/x98uajo7gI1b85+DJB7D7S5JmyvnjjwcFI5QhKoI1VJQBVHR+j2yqANE
Rwf4/uj8R9A0Gw8Qag3iPkpSVCS1Zgmiozdbe7s7bzr7e/I3nAZ/6G53l4TF
xzy4W3g30zDNtAbd+n2q1R0qAsCQSVdECXCMP6Q6ABvIm6cJ2DdJ1CAL7NlY
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
kY0AAA==

-->

</rfc>
